#include <stdio.h>

int solution[10];

int isValid(int upto) {
    // upto is the index we have filled up to (exclusive)
    // Partial constraint check
    int sum = 0;
    for (int i = 0; i < upto; i++) {
        if (solution[i] < 0 || solution[i] > 9) return 0;
        sum += solution[i];
    }
    if (sum > 10) return 0; // sum already too large

    return 1;
}

int checkFull() {
    int sum = 0;
    int counts[10] = {0};

    for (int i = 0; i < 10; i++) {
        sum += solution[i];
        if (solution[i] < 0 || solution[i] > 9) return 0;
        counts[solution[i]]++;
    }

    if (sum != 10) return 0;

    for (int i = 0; i < 10; i++) {
        if (solution[i] != counts[i]) return 0;
    }
    return 1;
}

int solve(int index) {
    if (index == 10) {
        if (checkFull()) {
            return 1;
        }
        return 0;
    }

    for (int digit = 0; digit <= 9; digit++) {
        solution[index] = digit;
        if (isValid(index + 1)) {
            if (solve(index + 1)) {
                return 1;
            }
        }
    }

    return 0;
}

int main() {
    if (solve(0)) {
        printf("Solution: ");
        for (int i = 0; i < 10; i++) printf("%d", solution[i]);
        printf("\n");
    } else {
        printf("No solution found.\n");
    }

    return 0;
}